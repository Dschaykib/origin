linters: with_defaults(
  default = NULL,
  T_and_F_symbol_linter = lintr::T_and_F_symbol_linter,
  line_length_lintr = lintr::line_length_linter(80L),
  assignment_linter = lintr::assignment_linter,
  closed_curly_linter = lintr::closed_curly_linter(allow_single_line = FALSE),
  commas_linter = lintr::commas_linter,
  commented_code_linter = lintr::commented_code_linter,
  complexity_limit = lintr::cyclocomp_linter(complexity_limit = 30),
  object_name_linter = lintr::object_name_linter(styles = "snake_case"),
  object_length_linter = lintr::object_length_linter(length = 30L),
  equals_na_linter = lintr::equals_na_linter,
  function_left_parentheses_linter = lintr::function_left_parentheses_linter,
  infix_spaces_linter = lintr::infix_spaces_linter,
  no_tab_linter = lintr::no_tab_linter,
  open_curly_linter = lintr::open_curly_linter(allow_single_line = FALSE),
  paren_brace_linter = lintr::paren_brace_linter,
  absolute_path_linter = lintr::absolute_path_linter(lax = TRUE),
  nonportable_path_linter = lintr::nonportable_path_linter(lax = TRUE),
  pipe_continuation_linter = lintr::pipe_continuation_linter,
  semicolon_terminator_linter =
    lintr::semicolon_terminator_linter(semicolon = c("compound", "trailing")),
  seq_linter = lintr::seq_linter,
  single_quotes_linter = lintr::single_quotes_linter,
  spaces_inside_linter = lintr::spaces_inside_linter,
  spaces_left_parentheses_linter = lintr::spaces_left_parentheses_linter,
  undesirable_function_linter = lintr::undesirable_function_linter(fun =
  c(lintr::default_undesirable_functions[!names(lintr::default_undesirable_functions)
  %in% c("mapply", "options")])),
  undesirable_operator_linter =
    lintr::undesirable_operator_linter(
      op = c(lintr::default_undesirable_operators)),
  unneeded_concatenation_linter = lintr::unneeded_concatenation_linter)
exclusions: list("R/zzz.R",
                 "tests/testthat/test_origin_file.R",
                 "tests/testthat/test_verbolize.R")
exclude: "# Exclude Linting"
exclude_start: "# Begin Exclude Linting"
exclude_end: "# End Exclude Linting"

